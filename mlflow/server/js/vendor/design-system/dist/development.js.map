{"version":3,"file":"development.js","sources":["../src/design-system/utils/useNotifyOnFirstView.ts","../src/development/Banner/Banner.tsx","../src/development/ChatUI/ChatInput.tsx","../src/development/ChatUI/CodeSnippet.tsx","../src/development/ChatUI/Feedback.tsx","../src/development/ChatUI/Message.tsx","../src/development/ChatUI/MessageActionButton.tsx","../src/development/ChatUI/MessageBody.tsx","../src/development/ChatUI/MessageHeader.tsx","../src/development/ChatUI/MessagePagination.tsx","../src/development/ChatUI/index.tsx","../src/development/Slider/Slider.tsx","../src/development/Toolbar/Toolbar.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n// Define a module-global observer and a WeakMap on elements to hold callbacks\nlet sharedObserver: IntersectionObserver | null = null;\nconst entryCallbackMap = new WeakMap();\n\nconst ensureSharedObserverExists = () => {\n  if (!sharedObserver) {\n    sharedObserver = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          const entryCallback = entryCallbackMap.get(entry.target);\n          if (entryCallback) {\n            entryCallback();\n            entryCallbackMap.delete(entry.target);\n          }\n        }\n      });\n    });\n  }\n};\n\nfunction observeElement(element: Element, callback: () => void) {\n  ensureSharedObserverExists();\n  entryCallbackMap.set(element, callback);\n\n  sharedObserver?.observe(element);\n\n  return () => {\n    if (element) {\n      sharedObserver?.unobserve(element);\n      entryCallbackMap.delete(element);\n    }\n  };\n}\n\ninterface useNotifyOnFirstViewProps {\n  onView: () => void;\n}\n\n/**\n * Checks if the element was viewed and calls the onView callback.\n * NOTE: This hook only triggers the onView callback once for the element.\n * @param onView - callback to be called when the element is viewed\n * @typeParam T - extends Element to specify the type of element being observed\n */\nexport const useNotifyOnFirstView = <T extends Element>({ onView }: useNotifyOnFirstViewProps) => {\n  const isViewedRef = useRef(false);\n  const elementRef = useRef<T | null>(null);\n\n  useEffect(() => {\n    const element = elementRef.current;\n    // If already viewed or element is not available, do nothing\n    if (!element || isViewedRef.current) {\n      return;\n    }\n\n    const callback = () => {\n      isViewedRef.current = true;\n      onView();\n    };\n\n    // If IntersectionObserver is not available, assume that the element is visible\n    if (!window.IntersectionObserver) {\n      callback();\n      return;\n    }\n\n    return observeElement(element, callback);\n  }, [onView]);\n\n  return { elementRef };\n};\n","import { css } from '@emotion/react';\nimport type { ReactNode } from 'react';\nimport React from 'react';\n\nimport { Button } from '../../design-system/Button';\nimport {\n  DesignSystemEventProviderAnalyticsEventTypes,\n  DesignSystemEventProviderComponentTypes,\n  useDesignSystemEventComponentCallbacks,\n} from '../../design-system/DesignSystemEventProvider/DesignSystemEventProvider';\nimport type { DesignSystemThemeInterface } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { CloseIcon, DangerIcon, MegaphoneIcon, WarningIcon } from '../../design-system/Icon';\nimport { Typography } from '../../design-system/Typography';\nimport type { AnalyticsEventProps } from '../../design-system/types';\nimport { useNotifyOnFirstView } from '../../design-system/utils/useNotifyOnFirstView';\nimport { primitiveColors } from '../../theme/_generated/PrimitiveColors';\n\nconst { Text, Paragraph } = Typography;\n\nexport const BANNER_MIN_HEIGHT = 68;\n// Max height will allow 2 lines of description (3 lines total)\nexport const BANNER_MAX_HEIGHT = 82;\n\nexport type BannerLevel = 'info' | 'warning' | 'error';\ntype BannerColorScheme = {\n  backgroundDefaultColor: string;\n  actionButtonBackgroundHoverColor: string;\n  actionButtonBackgroundPressColor: string;\n  textColor: string;\n  textHoverColor: string;\n  textPressColor: string;\n};\n\nexport interface BannerProps extends AnalyticsEventProps<DesignSystemEventProviderAnalyticsEventTypes.OnView> {\n  level: BannerLevel;\n  message: string;\n  description?: string;\n  ctaText?: string;\n  onAccept?: () => void;\n  closable?: boolean;\n  onClose?: () => void;\n  'data-testid'?: string;\n\n  // Temporary prop to enable passing in localized string until officials supported in Dubois\n  closeButtonAriaLabel?: string;\n}\n\nconst useStyles = (props: BannerProps, theme: DesignSystemThemeInterface['theme']) => {\n  const bannerLevelToBannerColors: { [key in BannerLevel]: BannerColorScheme } = {\n    info: {\n      backgroundDefaultColor: theme.colors.actionPrimaryBackgroundDefault,\n      actionButtonBackgroundHoverColor: theme.colors.actionPrimaryBackgroundHover,\n      actionButtonBackgroundPressColor: theme.colors.actionPrimaryBackgroundPress,\n      textColor: theme.colors.actionPrimaryTextDefault,\n      textHoverColor: theme.colors.actionPrimaryTextHover,\n      textPressColor: theme.colors.actionPrimaryTextPress,\n    },\n    // TODO (PLAT-80558, zack.brody) Update hover and press states once we have colors for these\n    warning: {\n      backgroundDefaultColor: theme.colors.tagLemon,\n      actionButtonBackgroundHoverColor: theme.colors.tagLemon,\n      actionButtonBackgroundPressColor: theme.colors.tagLemon,\n      textColor: primitiveColors.grey800,\n      textHoverColor: primitiveColors.grey800,\n      textPressColor: primitiveColors.grey800,\n    },\n    error: {\n      backgroundDefaultColor: theme.colors.actionDangerPrimaryBackgroundDefault,\n      actionButtonBackgroundHoverColor: theme.colors.actionDangerPrimaryBackgroundHover,\n      actionButtonBackgroundPressColor: theme.colors.actionDangerPrimaryBackgroundPress,\n      textColor: theme.colors.actionPrimaryTextDefault,\n      textHoverColor: theme.colors.actionPrimaryTextHover,\n      textPressColor: theme.colors.actionPrimaryTextPress,\n    },\n  };\n\n  const colorScheme = bannerLevelToBannerColors[props.level];\n\n  return {\n    banner: css`\n      max-height: ${BANNER_MAX_HEIGHT}px;\n      display: flex;\n      align-items: center;\n      width: 100%;\n      padding: 8px;\n      box-sizing: border-box;\n      background-color: ${colorScheme.backgroundDefaultColor};\n    `,\n    iconContainer: css`\n      display: flex;\n      color: ${colorScheme.textColor};\n      align-self: ${props.description ? 'flex-start' : 'center'};\n      box-sizing: border-box;\n      max-width: 60px;\n      padding-top: 4px;\n      padding-bottom: 4px;\n      padding-right: ${theme.spacing.xs}px;\n    `,\n    mainContent: css`\n      flex-direction: column;\n      align-self: ${props.description ? 'flex-start' : 'center'};\n      display: flex;\n      box-sizing: border-box;\n      padding-right: ${theme.spacing.sm}px;\n      padding-top: 2px;\n      padding-bottom: 2px;\n      // Add min-width so that ellipsis in child components will show.\n      min-width: ${theme.spacing.lg}px;\n      width: 100%;\n    `,\n    messageTextBlock: css`\n      // handle truncation after one line\n      display: -webkit-box;\n      -webkit-line-clamp: 1;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n\n      // Override text color to action text color\n      && {\n        color: ${colorScheme.textColor};\n      }\n    `,\n    descriptionBlock: css`\n      // handle truncation after two lines\n      display: -webkit-box;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n\n      // Override text color to action text color\n      && {\n        color: ${colorScheme.textColor};\n      }\n    `,\n    rightContainer: css`\n      margin-left: auto;\n      display: flex;\n      align-items: center;\n    `,\n    closeIconContainer: css`\n      display: flex;\n      margin-left: ${theme.spacing.xs}px;\n      box-sizing: border-box;\n      line-height: 0;\n    `,\n    closeButton: css`\n      cursor: pointer;\n      background: none;\n      border: none;\n      margin: 0;\n      && {\n        height: 24px !important;\n        width: 24px !important;\n        padding: ${theme.spacing.xs}px !important;\n      }\n      &&:hover {\n        background-color: transparent !important;\n      }\n    `,\n    closeIcon: css`\n      color: ${colorScheme.textColor}!important;\n    `,\n    actionButtonContainer: css`\n      margin-right: ${theme.spacing.xs}px;\n    `,\n    // Override design system colors to show the use the action text color for text and border.\n    // Also overrides text for links.\n    actionButton: css`\n      color: ${colorScheme.textColor}!important;\n      border-color: ${colorScheme.textColor}!important;\n      \n      &:focus,\n      &:hover {\n        border-color: ${colorScheme.textHoverColor}!important;\n        color: ${colorScheme.textHoverColor}!important;\n        background-color: ${colorScheme.actionButtonBackgroundHoverColor}!important;\n      }\n      \n      &:active {\n        border-color: ${colorScheme.textPressColor}!important;\n        color: ${colorScheme.textPressColor}!important;\n        background-color: ${colorScheme.actionButtonBackgroundPressColor}!important;\n      }\n\n      a {\n        color: ${theme.colors.actionPrimaryTextDefault};\n      }\n      \n      a:focus,\n      a:hover {\n        color: ${colorScheme.textHoverColor};\n        text-decoration: none;\n      }\n      \n      a:active {\n        color: ${colorScheme.textPressColor}\n        text-decoration: none;\n      }\n    `,\n  };\n};\n\nconst levelToIconMap: { [key in BannerLevel]: ReactNode } = {\n  info: <MegaphoneIcon data-testid=\"level-info-icon\" />,\n  warning: <WarningIcon data-testid=\"level-warning-icon\" />,\n  error: <DangerIcon data-testid=\"level-error-icon\" />,\n};\n\nexport const Banner: React.FC<BannerProps> = (props) => {\n  const {\n    level,\n    message,\n    description,\n    ctaText,\n    onAccept,\n    closable,\n    onClose,\n    closeButtonAriaLabel,\n    componentId,\n    analyticsEvents,\n  } = props;\n  const [closed, setClosed] = React.useState(false);\n\n  const { theme } = useDesignSystemTheme();\n  const styles = useStyles(props, theme);\n\n  const eventContext = useDesignSystemEventComponentCallbacks({\n    componentType: DesignSystemEventProviderComponentTypes.Banner,\n    componentId,\n    analyticsEvents: analyticsEvents ?? [DesignSystemEventProviderAnalyticsEventTypes.OnView],\n  });\n  const { elementRef } = useNotifyOnFirstView<HTMLDivElement>({ onView: eventContext.onView });\n\n  const actionButton =\n    onAccept && ctaText ? (\n      <div css={styles.actionButtonContainer}>\n        <Button componentId={`${componentId}.accept`} onClick={onAccept} css={styles.actionButton} size=\"small\">\n          {ctaText}\n        </Button>\n      </div>\n    ) : null;\n  const close =\n    closable !== false ? (\n      <div css={styles.closeIconContainer}>\n        <Button\n          componentId={`${componentId}.close`}\n          css={styles.closeButton}\n          onClick={() => {\n            if (onClose) {\n              onClose();\n            }\n            setClosed(true);\n          }}\n          aria-label={closeButtonAriaLabel ?? 'Close'}\n          data-testid=\"banner-dismiss\"\n        >\n          <CloseIcon css={styles.closeIcon} />\n        </Button>\n      </div>\n    ) : null;\n\n  return (\n    <>\n      {!closed && (\n        <div ref={elementRef} css={styles.banner} className=\"banner\" data-testid={props['data-testid']}>\n          <div css={styles.iconContainer}>{levelToIconMap[level]}</div>\n          <div css={styles.mainContent}>\n            <Text size=\"md\" bold css={styles.messageTextBlock} title={message}>\n              {message}\n            </Text>\n            {description && (\n              <Paragraph withoutMargins css={styles.descriptionBlock} title={description}>\n                {description}\n              </Paragraph>\n            )}\n          </div>\n          <div css={styles.rightContainer}>\n            {actionButton}\n            {close}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import { css } from '@emotion/react';\nimport React from 'react';\n\nimport { Button } from '../../design-system/Button';\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { CursorIcon } from '../../design-system/Icon';\nimport { Input } from '../../design-system/Input';\nimport type { TextAreaProps } from '../../design-system/Input';\n\ntype ChatInputProps = {\n  className?: string;\n  textAreaProps?: TextAreaProps;\n  onSubmit?: (value: string) => void;\n  suggestionButtons?: React.ReactNode;\n};\n\nconst chatInputStyles = {\n  container: css({\n    backgroundColor: 'var(--background-primary)',\n    padding: 'var(--spacing-sm)',\n    position: 'relative',\n  }),\n\n  suggestionButtons: css({\n    display: 'flex',\n    gap: 'var(--spacing-sm)',\n    marginBottom: 'var(--spacing-sm)',\n  }),\n\n  textArea: css({\n    minWidth: '100%',\n    maxHeight: '150px !important',\n  }),\n\n  button: css({\n    position: 'absolute',\n    bottom: 'calc(var(--spacing-sm) + 4px)',\n    right: 'calc(var(--spacing-sm) + 4px)',\n    // Flip horizontally; the existing icon points to the left but this should be pointing to the right.\n    transform: 'scaleX(-1)',\n  }),\n};\n\nexport const ChatInput = ({ className, onSubmit, textAreaProps, suggestionButtons }: ChatInputProps) => {\n  const { theme } = useDesignSystemTheme();\n  const [value, setValue] = React.useState('');\n\n  const handleSubmit = () => {\n    if (!value) {\n      return;\n    }\n\n    onSubmit?.(value);\n    setValue('');\n  };\n\n  return (\n    <div\n      css={chatInputStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--background-primary' as string]: theme.colors.backgroundPrimary,\n        ['--border-decorative' as string]: theme.colors.borderDecorative,\n      }}\n      className={className}\n    >\n      {suggestionButtons && <div css={chatInputStyles.suggestionButtons}>{suggestionButtons}</div>}\n\n      <Input.TextArea\n        autoSize\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        placeholder=\"Send a message\"\n        css={chatInputStyles.textArea}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' && !e.metaKey && !e.ctrlKey && !e.shiftKey) {\n            e.preventDefault();\n            handleSubmit();\n          }\n        }}\n        {...textAreaProps}\n      />\n      <Button\n        componentId=\"codegen_design-system_src_development_chatui_chatinput.tsx_83\"\n        size=\"small\"\n        css={chatInputStyles.button}\n        icon={<CursorIcon />}\n        onClick={handleSubmit}\n      />\n    </div>\n  );\n};\n\nexport default ChatInput;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\n\ntype CodeSnippetProps = {\n  language: string;\n  buttons: React.ReactNode;\n  children: React.ReactNode;\n};\n\nconst snippetStyles = {\n  container: css({\n    margin: 'var(--spacing-md) 0',\n  }),\n\n  header: css({\n    backgroundColor: 'var(--color-grey700)',\n    color: 'var(--color-grey300)',\n    borderRadius: 'var(--border-radius) var(--border-radius) 0 0',\n    padding: 'var(--spacing-sm) var(--spacing-sm) var(--spacing-sm) var(--spacing-md)',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  }),\n\n  buttonSvg: css({\n    svg: {\n      color: 'var(--color-grey300)',\n    },\n  }),\n\n  code: css({\n    padding: 'var(--spacing-sm) var(--spacing-md)',\n    margin: '0',\n    borderRadius: '0 0 var(--border-radius) var(--border-radius)',\n    backgroundColor: 'var(--color-grey800)',\n    color: 'var(--color-grey300)',\n  }),\n};\n\nexport const CodeSnippet = ({ language, buttons, children }: CodeSnippetProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={snippetStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n        ['--border-radius' as string]: `${theme.general.borderRadiusBase}px`,\n        ['--color-grey700' as string]: theme.colors.grey700,\n        ['--color-grey300' as string]: theme.colors.grey300,\n        ['--color-grey800' as string]: theme.colors.grey800,\n      }}\n    >\n      <div css={snippetStyles.header}>\n        <span>{language}</span>\n        <div css={snippetStyles.buttonSvg}>{buttons}</div>\n      </div>\n      <pre css={snippetStyles.code}>{children}</pre>\n    </div>\n  );\n};\n\nexport default CodeSnippet;\n","import { css } from '@emotion/react';\nimport { useState } from 'react';\n\nimport { Button } from '../../design-system/Button';\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { CloseIcon, FaceFrownIcon, FaceNeutralIcon, FaceSmileIcon } from '../../design-system/Icon';\nimport { Typography } from '../../design-system/Typography';\n\ntype FeedbackProps = {\n  onFeedback: (feedback: 'Better' | 'Same' | 'Worse') => void;\n};\n\nconst feedbackStyles = {\n  container: css({\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n  }),\n\n  feedbackPrompt: css({\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 'var(--spacing-sm)',\n  }),\n\n  feedbackOptions: css({\n    display: 'flex',\n    gap: 'var(--spacing-sm)',\n  }),\n};\n\nexport const Feedback = ({ onFeedback }: FeedbackProps) => {\n  const [isVisible, setIsVisible] = useState(true);\n  const { theme } = useDesignSystemTheme();\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <div\n      css={feedbackStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--text-secondary' as string]: theme.colors.textSecondary,\n      }}\n    >\n      <div css={feedbackStyles.feedbackPrompt}>\n        <Typography.Text\n          style={{\n            color: theme.colors.textSecondary,\n          }}\n        >\n          Was this response:\n        </Typography.Text>\n        <div css={feedbackStyles.feedbackOptions}>\n          <Button\n            componentId=\"codegen_design-system_src_development_chatui_feedback.tsx_57\"\n            icon={<FaceSmileIcon />}\n            onClick={() => {\n              onFeedback('Better');\n              setIsVisible(false);\n            }}\n          >\n            Better\n          </Button>\n          <Button\n            componentId=\"codegen_design-system_src_development_chatui_feedback.tsx_66\"\n            icon={<FaceNeutralIcon />}\n            onClick={() => {\n              onFeedback('Same');\n              setIsVisible(false);\n            }}\n          >\n            Same\n          </Button>\n          <Button\n            componentId=\"codegen_design-system_src_development_chatui_feedback.tsx_75\"\n            icon={<FaceFrownIcon />}\n            onClick={() => {\n              onFeedback('Worse');\n              setIsVisible(false);\n            }}\n          >\n            Worse\n          </Button>\n        </div>\n      </div>\n      <Button\n        componentId=\"codegen_design-system_src_development_chatui_feedback.tsx_86\"\n        icon={<CloseIcon />}\n        onClick={() => setIsVisible(false)}\n      />\n    </div>\n  );\n};\n\nexport default Feedback;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\n\ntype MessageProps = {\n  isActiveUser: boolean;\n  children: React.ReactNode;\n};\n\nconst messageStyles = {\n  container: css({\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 'var(--spacing-sm)',\n    paddingTop: 'var(--spacing-md)',\n    paddingRight: 'var(--spacing-sm)',\n    paddingBottom: 'var(--spacing-md)',\n    paddingLeft: 'calc(var(--spacing-md) * 2)',\n    backgroundColor: 'var(--background)',\n    borderBottom: `1px solid var(--border-decorative)`,\n  }),\n};\n\nexport const Message = ({ isActiveUser, children }: MessageProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={messageStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n        ['--background' as string]: isActiveUser ? theme.colors.backgroundPrimary : theme.colors.backgroundSecondary,\n        ['--border-decorative' as string]: theme.colors.borderDecorative,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Message;\n","import { css } from '@emotion/react';\nimport { useEffect, useState } from 'react';\n\nimport type { ButtonProps } from '../../design-system/Button';\nimport { Button } from '../../design-system/Button';\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { CheckIcon } from '../../design-system/Icon';\n\nconst buttonStyles = {\n  container: css({\n    position: 'relative',\n    display: 'inline-block',\n    width: 'max-content',\n  }),\n  checkIcon: css({\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    pointerEvents: 'none',\n\n    svg: {\n      color: 'var(--checkmark-color)',\n    },\n  }),\n};\n\nconst MessageActionButton = (props: ButtonProps) => {\n  const [showCheck, setShowCheck] = useState(false);\n  const { theme } = useDesignSystemTheme();\n\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    setShowCheck(true);\n    props.onClick?.(e);\n  };\n\n  if (props.children) {\n    throw new Error('MessageActionButton: Children not supported; use as icon-only button.');\n  }\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n    if (showCheck) {\n      timeoutId = setTimeout(() => {\n        setShowCheck(false);\n      }, 750);\n    }\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [showCheck]);\n\n  return (\n    <span\n      css={buttonStyles.container}\n      style={{\n        ['--checkmark-color' as string]: theme.colors.green500,\n      }}\n    >\n      <Button\n        size=\"small\"\n        {...props}\n        onClick={handleClick}\n        css={{\n          svg: {\n            transition: showCheck ? 'none' : 'opacity 350ms',\n            opacity: showCheck ? '0' : '1',\n          },\n        }}\n      />\n      <CheckIcon\n        css={buttonStyles.checkIcon}\n        style={{\n          transition: showCheck ? 'none' : 'opacity 350ms',\n          opacity: showCheck ? '1' : '0',\n        }}\n      />\n    </span>\n  );\n};\n\nexport default MessageActionButton;\n","import { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\n\ntype MessageBodyProps = {\n  children: React.ReactNode;\n};\n\nconst MessageBody = ({ children }: MessageBodyProps) => {\n  const { getPrefixedClassName } = useDesignSystemTheme();\n\n  const typographyClassname = getPrefixedClassName('typography');\n\n  return (\n    <div\n      css={{\n        [`& .${typographyClassname}:last-of-type`]: {\n          marginBottom: 0,\n        },\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default MessageBody;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { Typography } from '../../design-system/Typography';\n\ntype MessageHeaderProps = {\n  userName: React.ReactNode;\n  customHeaderIcon?: React.ReactNode;\n  avatarURL?: string;\n  leftContent?: React.ReactNode;\n  rightContent?: React.ReactNode;\n};\n\nconst headerStyles = {\n  container: css({\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    position: 'relative',\n  }),\n\n  leftContent: css({\n    display: 'flex',\n    alignItems: 'center',\n    gap: 'var(--spacing-sm)',\n  }),\n\n  rightContent: css({\n    display: 'flex',\n    alignItems: 'center',\n  }),\n\n  avatar: css({\n    position: 'absolute',\n    left: -22,\n    top: 2,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    width: 'var(--spacing-md)',\n    height: 'var(--spacing-md)',\n    borderRadius: '50%',\n  }),\n};\nconst avatarDefaultBackgroundImage = 'linear-gradient(180deg, #FFD983 0%, #FFB800 100%)';\n\nconst MessageHeader = ({ userName, customHeaderIcon, avatarURL, leftContent, rightContent }: MessageHeaderProps) => {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <div\n      css={headerStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n      }}\n    >\n      <div css={headerStyles.leftContent}>\n        {customHeaderIcon ? (\n          customHeaderIcon\n        ) : (\n          <div\n            css={headerStyles.avatar}\n            style={{\n              backgroundImage: avatarURL\n                ? `url(${avatarURL}), ${avatarDefaultBackgroundImage}`\n                : avatarDefaultBackgroundImage,\n            }}\n          />\n        )}\n        <Typography.Text bold>{userName}</Typography.Text>\n        {leftContent}\n      </div>\n      <div css={headerStyles.rightContent}>{rightContent}</div>\n    </div>\n  );\n};\n\nexport default MessageHeader;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { ChevronLeftIcon, ChevronRightIcon } from '../../design-system/Icon';\nimport { Typography } from '../../design-system/Typography';\n\ntype PaginationProps = {\n  onPrevious: () => void;\n  onNext: () => void;\n  current: number;\n  total: number;\n};\n\nconst paginationStyles = {\n  container: css({\n    display: 'flex',\n    alignItems: 'center',\n    justifyItems: 'center',\n    gap: 'var(--spacing-sm)',\n  }),\n\n  button: css({\n    border: 'none',\n    backgroundColor: 'transparent',\n    padding: 0,\n    display: 'flex',\n    height: 'var(--spacing-md)',\n    alignItems: 'center',\n  }),\n};\n\nexport const MessagePagination = ({ onPrevious, onNext, current, total }: PaginationProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={paginationStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n      }}\n    >\n      <button\n        css={paginationStyles.button}\n        onClick={onPrevious}\n        style={{\n          color: current === 1 ? theme.colors.actionDisabledText : theme.colors.textSecondary,\n          cursor: current === 1 ? 'arrow' : 'pointer',\n        }}\n      >\n        <ChevronLeftIcon />\n      </button>\n      <Typography.Text\n        style={{\n          color: theme.colors.textSecondary,\n        }}\n      >{`${current}/${total}`}</Typography.Text>\n      <button\n        css={paginationStyles.button}\n        onClick={onNext}\n        style={{\n          color: current === total ? theme.colors.actionDisabledText : theme.colors.textSecondary,\n          cursor: current === total ? 'arrow' : 'pointer',\n        }}\n      >\n        <ChevronRightIcon />\n      </button>\n    </div>\n  );\n};\n\nexport default MessagePagination;\n","import ChatInput from './ChatInput';\nimport CodeSnippet from './CodeSnippet';\nimport Feedback from './Feedback';\nimport Message from './Message';\nimport MessageActionButton from './MessageActionButton';\nimport MessageBody from './MessageBody';\nimport MessageHeader from './MessageHeader';\nimport MessagePagination from './MessagePagination';\n\nexport const ChatUI = {\n  MessageActionButton,\n  MessageHeader,\n  MessageBody,\n  MessagePagination,\n  Message,\n  Feedback,\n  CodeSnippet,\n  ChatInput,\n};\n","import { css } from '@emotion/react';\nimport * as RadixSlider from '@radix-ui/react-slider';\nimport { forwardRef } from 'react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks';\nimport type { Theme } from '../../theme';\n\nexport type SliderRootProps = Omit<RadixSlider.SliderProps, 'orientation'>;\nexport type SliderTrackProps = RadixSlider.SliderTrackProps;\nexport type SliderRangeProps = RadixSlider.SliderRangeProps;\nexport type SliderThumbProps = RadixSlider.SliderThumbProps;\n\nconst getRootStyles = () => {\n  return css({\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n\n    '&[data-orientation=\"vertical\"]': {\n      flexDirection: 'column',\n      width: 20,\n      height: 100,\n    },\n\n    '&[data-orientation=\"horizontal\"]': {\n      height: 20,\n      width: 200,\n    },\n  });\n};\n\nexport const Root = forwardRef<HTMLElement, SliderRootProps>((props: SliderRootProps, ref): JSX.Element => {\n  return <RadixSlider.Root css={getRootStyles()} {...props} ref={ref} />;\n});\n\nconst getTrackStyles = (theme: Theme) => {\n  return css({\n    backgroundColor: theme.colors.grey100,\n    position: 'relative',\n    flexGrow: 1,\n    borderRadius: 9999,\n\n    '&[data-orientation=\"vertical\"]': {\n      width: 3,\n    },\n\n    '&[data-orientation=\"horizontal\"]': {\n      height: 3,\n    },\n  });\n};\n\nexport const Track = forwardRef<HTMLElement, SliderTrackProps>((props: SliderTrackProps, ref): JSX.Element => {\n  const { theme } = useDesignSystemTheme();\n\n  return <RadixSlider.Track css={getTrackStyles(theme)} {...props} ref={ref} />;\n});\n\nconst getRangeStyles = (theme: Theme) => {\n  return css({\n    backgroundColor: theme.colors.primary,\n    position: 'absolute',\n    borderRadius: 9999,\n    height: '100%',\n\n    '&[data-disabled]': {\n      backgroundColor: theme.colors.grey100,\n    },\n  });\n};\n\nexport const Range = forwardRef<HTMLElement, SliderRangeProps>((props: SliderRangeProps, ref): JSX.Element => {\n  const { theme } = useDesignSystemTheme();\n\n  return <RadixSlider.Range css={getRangeStyles(theme)} {...props} ref={ref} />;\n});\n\nconst getThumbStyles = (theme: Theme) => {\n  return css({\n    display: 'block',\n    width: 20,\n    height: 20,\n    backgroundColor: theme.colors.actionPrimaryBackgroundDefault,\n    boxShadow: `0 2px 4px 0 ${theme.colors.grey400}`,\n    borderRadius: 10,\n    outline: 'none',\n\n    '&:hover': {\n      backgroundColor: theme.colors.actionPrimaryBackgroundHover,\n    },\n\n    '&:focus': {\n      backgroundColor: theme.colors.actionPrimaryBackgroundPress,\n    },\n\n    '&[data-disabled]': {\n      backgroundColor: theme.colors.grey200,\n      boxShadow: 'none',\n    },\n  });\n};\n\nexport const Thumb = forwardRef<HTMLElement, SliderThumbProps>((props: SliderThumbProps, ref): JSX.Element => {\n  const { theme } = useDesignSystemTheme();\n\n  return <RadixSlider.Thumb css={getThumbStyles(theme)} {...props} ref={ref} />;\n});\n","import { css } from '@emotion/react';\nimport * as RadixToolbar from '@radix-ui/react-toolbar';\nimport { forwardRef } from 'react';\n\nimport { useDesignSystemTheme } from '../../design-system';\nimport type { Theme } from '../../theme';\n\nexport type ToolbarRootProps = Omit<RadixToolbar.ToolbarProps, 'orientation'>;\nexport type ToolbarButtonProps = RadixToolbar.ToolbarButtonProps;\nexport type ToolbarSeparatorProps = RadixToolbar.ToolbarSeparatorProps;\nexport type ToolbarLinkProps = RadixToolbar.ToolbarLinkProps;\nexport type ToolbarToogleGroupProps =\n  | RadixToolbar.ToolbarToggleGroupSingleProps\n  | RadixToolbar.ToolbarToggleGroupMultipleProps;\nexport type ToolbarToggleItemProps = RadixToolbar.ToolbarToggleItemProps;\n\nconst getRootStyles = (theme: Theme) => {\n  return css({\n    alignItems: 'center',\n    backgroundColor: theme.colors.backgroundSecondary,\n    border: `1px solid ${theme.colors.borderDecorative}`,\n    borderRadius: theme.borders.borderRadiusMd,\n    boxShadow: theme.general.shadowLow,\n    display: 'flex',\n    gap: theme.spacing.md,\n    width: 'max-content',\n    padding: theme.spacing.sm,\n  });\n};\n\nexport const Root = forwardRef<HTMLDivElement, ToolbarRootProps>((props: ToolbarRootProps, ref): JSX.Element => {\n  const { theme } = useDesignSystemTheme();\n\n  return <RadixToolbar.Root css={getRootStyles(theme)} {...props} ref={ref} />;\n});\n\nexport const Button = forwardRef<HTMLButtonElement, ToolbarButtonProps>(\n  (props: ToolbarButtonProps, ref): JSX.Element => {\n    return <RadixToolbar.Button {...props} ref={ref} />;\n  },\n);\n\nconst getSeparatorStyles = (theme: Theme) => {\n  return css({\n    alignSelf: 'stretch',\n    backgroundColor: theme.colors.borderDecorative,\n    width: 1,\n  });\n};\n\nexport const Separator = forwardRef<HTMLDivElement, ToolbarSeparatorProps>(\n  (props: ToolbarSeparatorProps, ref): JSX.Element => {\n    const { theme } = useDesignSystemTheme();\n    return <RadixToolbar.Separator css={getSeparatorStyles(theme)} {...props} ref={ref} />;\n  },\n);\n\nexport const Link = forwardRef<HTMLAnchorElement, ToolbarLinkProps>((props: ToolbarLinkProps, ref): JSX.Element => {\n  return <RadixToolbar.Link {...props} ref={ref} />;\n});\n\nexport const ToggleGroup = forwardRef<\n  HTMLDivElement,\n  RadixToolbar.ToolbarToggleGroupSingleProps | RadixToolbar.ToolbarToggleGroupMultipleProps\n>((props: ToolbarToogleGroupProps, ref): JSX.Element => {\n  return <RadixToolbar.ToggleGroup {...props} ref={ref} />;\n});\n\nconst getToggleItemStyles = (theme: Theme) => {\n  return css({\n    background: 'none',\n    color: theme.colors.textPrimary,\n    border: 'none',\n    cursor: 'pointer',\n    '&:hover': {\n      color: theme.colors.actionDefaultTextHover,\n    },\n    '&[data-state=\"on\"]': {\n      color: theme.colors.actionDefaultTextPress,\n    },\n  });\n};\n\nexport const ToggleItem = forwardRef<HTMLButtonElement, ToolbarToggleItemProps>(\n  (props: ToolbarToggleItemProps, ref): JSX.Element => {\n    const { theme } = useDesignSystemTheme();\n    return <RadixToolbar.ToggleItem css={getToggleItemStyles(theme)} {...props} ref={ref} />;\n  },\n);\n"],"names":["sharedObserver","entryCallbackMap","WeakMap","ensureSharedObserverExists","IntersectionObserver","entries","forEach","entry","isIntersecting","entryCallback","get","target","delete","observeElement","element","callback","_sharedObserver","set","observe","_sharedObserver2","unobserve","useNotifyOnFirstView","_ref","onView","isViewedRef","useRef","elementRef","useEffect","current","window","Text","Paragraph","Typography","BANNER_MIN_HEIGHT","BANNER_MAX_HEIGHT","process","env","NODE_ENV","name","styles","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","useStyles","props","theme","bannerLevelToBannerColors","info","backgroundDefaultColor","colors","actionPrimaryBackgroundDefault","actionButtonBackgroundHoverColor","actionPrimaryBackgroundHover","actionButtonBackgroundPressColor","actionPrimaryBackgroundPress","textColor","actionPrimaryTextDefault","textHoverColor","actionPrimaryTextHover","textPressColor","actionPrimaryTextPress","warning","tagLemon","primitiveColors","grey800","error","actionDangerPrimaryBackgroundDefault","actionDangerPrimaryBackgroundHover","actionDangerPrimaryBackgroundPress","colorScheme","level","banner","css","iconContainer","description","spacing","xs","mainContent","sm","lg","messageTextBlock","descriptionBlock","rightContainer","closeIconContainer","closeButton","closeIcon","actionButtonContainer","actionButton","levelToIconMap","_jsx","MegaphoneIcon","WarningIcon","DangerIcon","Banner","message","ctaText","onAccept","closable","onClose","closeButtonAriaLabel","componentId","analyticsEvents","closed","setClosed","React","useState","useDesignSystemTheme","eventContext","useDesignSystemEventComponentCallbacks","componentType","DesignSystemEventProviderComponentTypes","DesignSystemEventProviderAnalyticsEventTypes","OnView","children","Button","onClick","size","close","CloseIcon","_Fragment","_jsxs","ref","className","bold","title","withoutMargins","chatInputStyles","container","suggestionButtons","textArea","button","ChatInput","onSubmit","textAreaProps","value","setValue","handleSubmit","style","backgroundPrimary","borderDecorative","Input","TextArea","autoSize","onChange","e","placeholder","onKeyDown","key","metaKey","ctrlKey","shiftKey","preventDefault","icon","CursorIcon","snippetStyles","header","buttonSvg","code","CodeSnippet","language","buttons","md","general","borderRadiusBase","grey700","grey300","feedbackStyles","feedbackPrompt","feedbackOptions","Feedback","onFeedback","isVisible","setIsVisible","textSecondary","color","FaceSmileIcon","FaceNeutralIcon","FaceFrownIcon","messageStyles","display","flexDirection","gap","paddingTop","paddingRight","paddingBottom","paddingLeft","backgroundColor","borderBottom","Message","isActiveUser","backgroundSecondary","buttonStyles","checkIcon","MessageActionButton","showCheck","setShowCheck","handleClick","_props$onClick","call","Error","timeoutId","setTimeout","clearTimeout","green500","_css","svg","transition","opacity","CheckIcon","MessageBody","getPrefixedClassName","typographyClassname","marginBottom","headerStyles","leftContent","rightContent","avatar","position","left","top","backgroundSize","backgroundPosition","width","height","borderRadius","avatarDefaultBackgroundImage","MessageHeader","userName","customHeaderIcon","avatarURL","backgroundImage","paginationStyles","MessagePagination","onPrevious","onNext","total","actionDisabledText","cursor","ChevronLeftIcon","ChevronRightIcon","ChatUI","getRootStyles","Root","forwardRef","RadixSlider","getTrackStyles","grey100","flexGrow","Track","getRangeStyles","primary","Range","getThumbStyles","boxShadow","grey400","outline","grey200","Thumb","alignItems","border","borders","borderRadiusMd","shadowLow","padding","RadixToolbar","getSeparatorStyles","alignSelf","Separator","Link","ToggleGroup","getToggleItemStyles","background","textPrimary","actionDefaultTextHover","actionDefaultTextPress","ToggleItem"],"mappings":"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"}